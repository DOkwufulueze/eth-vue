{
  "contractName": "UserAuthManager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dbAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isSetUp",
          "type": "bool"
        }
      ],
      "name": "SetUser",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "dbAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "destroyAndSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "firstName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lastName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "gravatar",
          "type": "bytes32"
        }
      ],
      "name": "setUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "login",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dbAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isSetUp\",\"type\":\"bool\"}],\"name\":\"SetUser\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dbAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"login\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"gravatar\",\"type\":\"bytes32\"}],\"name\":\"setUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"destroy()\":{\"details\":\"Transfers the current balance to the owner and terminates the contract.\"},\"isOwner()\":{\"returns\":{\"_0\":\"true if `msg.sender` is the owner of the contract.\"}},\"owner()\":{\"returns\":{\"_0\":\"the address of the owner.\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/dh206382/dev/eth-vue/contracts/UserAuthManager.sol\":\"UserAuthManager\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/dh206382/dev/eth-vue/contracts/DB.sol\":{\"keccak256\":\"0x2aacd8ab5e9d728e38dd1fee1d258aa2f43de39f96c387139fecd0f8cc35184e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ea40f63eb27a50d6c7e421c7f9872e949610724eb4633171af402137d1ca190f\",\"dweb:/ipfs/QmUhru9HAnz5yMHRSFCXyRXmQCra8qVpBx7FMttwVqXYiE\"]},\"/home/dh206382/dev/eth-vue/contracts/UserAuthManager.sol\":{\"keccak256\":\"0x9226f0730050500917aa38b7bbdd0fa25ea122a2bfee7e99b946aa47d50d9d6a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0e2309fa7a07e17741ee44f8241f5f320fc94511161ea465cf51cab2b5f934a8\",\"dweb:/ipfs/Qme4igBud2jY9VCvPe1REFDtKaxaqnmbGowRt8y8JLQATi\"]},\"/home/dh206382/dev/eth-vue/contracts/lib/arachnid/solidity-stringutils/strings.sol\":{\"keccak256\":\"0x9aab3a5454f9f26f5e9e97956c70a8b2a4be846ce8a5e460bfafe2ccbc929b6e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://10df44748106d09a6ecab7c184357d8c31b947decce5c789acdaf7baaa59aa41\",\"dweb:/ipfs/QmPd8xbrbp5PiXiWR2MJJXWKgbyTgxeishoRdhyvXaUjSJ\"]},\"/home/dh206382/dev/eth-vue/contracts/lib/userManager.sol\":{\"keccak256\":\"0x2bcc66991a8bc32b9ce16b6409a91bee6b47bf0c184147856f84151d0f58951c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b63f26f7a6f863253c8d63b11e723c32dd8afe23611d827b8165e7c845893fc\",\"dweb:/ipfs/QmNgxSFRQtW6WMxUp1yWaGciSezyCya8SrFyu3S55WfLBE\"]},\"/home/dh206382/dev/eth-vue/contracts/lib/utilities.sol\":{\"keccak256\":\"0xef8564a3444031c345ec77f92adf914270d973ed6211d038afb5e859711b7140\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://97cc7175c5c2243724d89abfed6398c6f3ea2d0c142f6751526b105eecc01bff\",\"dweb:/ipfs/QmXD1irq5DyFuMxAJuBHjzaoky9UUZXR85oRwTwYoyXdCN\"]},\"/home/dh206382/dev/eth-vue/contracts/zeppelin/lifecycle/Destructible.sol\":{\"keccak256\":\"0x42e18bc973417c3c6c2af43731da032d8a85467c57b0196c5fe3762bd56df513\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://08696f08004ced8593b426696368586305eb2a530931b16a45436b2248a2002c\",\"dweb:/ipfs/QmacFr5E5SNojeQpohjJmSSy84M6r5mA4L2QvNnfKLQfec\"]},\"/home/dh206382/dev/eth-vue/contracts/zeppelin/math/SafeMath.sol\":{\"keccak256\":\"0x30416269e95bb0ec2bb035da8ad9d68e710eb360c21a5ac8a3d23b42effb40c8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dc8a2a2963cd43894e77bcfaf11aef4f357cf66458e8c9ffd7f9f03161205f53\",\"dweb:/ipfs/QmXy3dR5uBtVFK7CsnSDsqGmXUFpA9HsnPsoknAe4SvhHX\"]},\"/home/dh206382/dev/eth-vue/contracts/zeppelin/ownership/Ownable.sol\":{\"keccak256\":\"0x51d58c7901f38b4b45dcc3ff827af8c824427fef4eb8aeb8b6a7e48c634a6799\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://71edb2450d287d3474a01c1a465be5210b0774dc036f7a786d12c584570f2049\",\"dweb:/ipfs/QmaUk1fUhcuiqfy4kp7XLDN2CgBakoLhPqJ9xiQ4uvpTaK\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100975760003560e060020a900480638f32d59b1161006a5780638f32d59b146101e657806391e06b6d14610202578063b34e97e81461020a578063f2fde38b14610212578063f5074f411461023857610097565b8063715018a61461009c57806383197ef0146100a6578063851aea7a146100ae5780638da5cb5b146101c2575b600080fd5b6100a461025e565b005b6100a46102c6565b6100a4600480360360808110156100c457600080fd5b8101906020810181356401000000008111156100df57600080fd5b8201836020820111156100f157600080fd5b8035906020019184600183028401116401000000008311171561011357600080fd5b91939092909160208101903564010000000081111561013157600080fd5b82018360208201111561014357600080fd5b8035906020019184600183028401116401000000008311171561016557600080fd5b91939092909160208101903564010000000081111561018357600080fd5b82018360208201111561019557600080fd5b803590602001918460018302840111640100000000831117156101b757600080fd5b9193509150356102ea565b6101ca6103e1565b60408051600160a060020a039092168252519081900360200190f35b6101ee6103f0565b604080519115158252519081900360200190f35b6101ca610401565b6101ee610410565b6100a46004803603602081101561022857600080fd5b5035600160a060020a031661042e565b6100a46004803603602081101561024e57600080fd5b5035600160a060020a031661044b565b6102666103f0565b61026f57600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6102ce6103f0565b6102d757600080fd5b6102df6103e1565b600160a060020a0316ff5b600154604080516020601f8a018190048102820181019092528881526103a192600160a060020a0316913391908b908b908190840183828082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a9150899081908401838280828437600092019190915250899250610468915050565b6040805160018152905133917f6648b859e158f53470fd0dc1bf91fcede20e1eb2d71db770236d145353b08a60919081900360200190a250505050505050565b600054600160a060020a031690565b600054600160a060020a0316331490565b600154600160a060020a031681565b60015460009061042990600160a060020a031633610a6f565b905090565b6104366103f0565b61043f57600080fd5b61044881610a92565b50565b6104536103f0565b61045c57600080fd5b80600160a060020a0316ff5b600061047b61047686610b0d565b610b32565b9050600061048b61047686610b0d565b9050600061049b61047686610b0d565b905060006104de8a6040518060400160405280601b81526020017f636f6e6669672f6d61782d757365722d6e616d652d6c656e6774680000000000815250610bdf565b905060006105218b6040518060400160405280601b81526020017f636f6e6669672f6d696e2d757365722d6e616d652d6c656e6774680000000000815250610bdf565b905060006105648c6040518060400160405280601c81526020017f636f6e6669672f6d61782d757365722d656d61696c2d6c656e67746800000000815250610bdf565b905060006105a78d6040518060400160405280601c81526020017f636f6e6669672f6d696e2d757365722d656d61696c2d6c656e67746800000000815250610bdf565b90508387111580156105b95750828710155b6105c257600080fd5b8386111580156105d25750828610155b6105db57600080fd5b8185111580156105eb5750808510155b6105f457600080fd5b6105fe8d8d610cc8565b8c600160a060020a031663f58660668d60405160200180807f757365722f66697273742d6e616d650000000000000000000000000000000000815250600f0182600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052805190602001208d6040518363ffffffff1660e060020a0281526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106ca5781810151838201526020016106b2565b50505050905090810190601f1680156106f75780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b505050508c600160a060020a031663f58660668d60405160200180807f757365722f6c6173742d6e616d65000000000000000000000000000000000000815250600e0182600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052805190602001208c6040518363ffffffff1660e060020a0281526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156107fb5781810151838201526020016107e3565b50505050905090810190601f1680156108285780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561084857600080fd5b505af115801561085c573d6000803e3d6000fd5b505050508c600160a060020a031663f58660668d60405160200180807f757365722f656d61696c00000000000000000000000000000000000000000000815250600a0182600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052805190602001208b6040518363ffffffff1660e060020a0281526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561092c578181015183820152602001610914565b50505050905090810190601f1680156109595780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561097957600080fd5b505af115801561098d573d6000803e3d6000fd5b505050508c600160a060020a03166325cf512d8d60405160200180807f757365722f677261766174617200000000000000000000000000000000000000815250600d0182600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052805190602001208a6040518363ffffffff1660e060020a0281526004018083815260200182815260200192505050600060405180830381600087803b158015610a4857600080fd5b505af1158015610a5c573d6000803e3d6000fd5b5050505050505050505050505050505050565b6000610a7b8383610eef565b15610a8857506001610a8c565b5060005b92915050565b600160a060020a038116610aa557600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b610b1561137a565b506040805180820190915281518152602082810190820152919050565b60208101518151600091601e1980820192909101015b80821015610bd857815160ff166080811015610b6957600183019250610bcc565b60e08160ff161015610b8057600283019250610bcc565b60f08160ff161015610b9757600383019250610bcc565b60f88160ff161015610bae57600483019250610bcc565b60fc8160ff161015610bc557600583019250610bcc565b6006830192505b50600190920191610b48565b5050919050565b600082600160a060020a031663bdc963d8836040516020018082805190602001908083835b60208310610c235780518252601f199092019160209182019101610c04565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206040518263ffffffff1660e060020a0281526004018082815260200191505060206040518083038186803b158015610c9557600080fd5b505afa158015610ca9573d6000803e3d6000fd5b505050506040513d6020811015610cbf57600080fd5b50519392505050565b610cd28282610eef565b610eeb5781600160a060020a0316633562fd208260405160200180807f757365722f637265617465642d6f6e0000000000000000000000000000000000815250600f0182600160a060020a03166c0100000000000000000000000002815260140191505060405160208183030381529060405280519060200120426040518363ffffffff1660e060020a0281526004018083815260200182815260200192505050600060405180830381600087803b158015610d8d57600080fd5b505af1158015610da1573d6000803e3d6000fd5b5050505081600160a060020a0316630bd851588260405160200180807f757365722f737461747573000000000000000000000000000000000000000000815250600b0182600160a060020a03166c010000000000000000000000000281526014019150506040516020818303038152906040528051906020012060016040518363ffffffff1660e060020a0281526004018083815260200182815260200192505050600060405180830381600087803b158015610e5d57600080fd5b505af1158015610e71573d6000803e3d6000fd5b50505050610eeb826040518060400160405280600981526020017f75736572732f69647300000000000000000000000000000000000000000000008152506040518060400160405280600b81526020017f75736572732f636f756e7400000000000000000000000000000000000000000081525084610f07565b5050565b600080610efc84846112cb565b60ff16119392505050565b600084600160a060020a031663bdc963d8846040516020018082805190602001908083835b60208310610f4b5780518252601f199092019160209182019101610f2c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206040518263ffffffff1660e060020a0281526004018082815260200191505060206040518083038186803b158015610fbd57600080fd5b505afa158015610fd1573d6000803e3d6000fd5b505050506040513d6020811015610fe757600080fd5b50516040518551919250600160a060020a03871691635a2bf25a918791859160209081019182918501908083835b602083106110345780518252601f199092019160209182019101611015565b51815160209384036101000a60001901801990921691161790529201938452506040805180850381528483018083528151919093012063ffffffff871660e060020a029092526024840191909152600160a060020a038816604484015251606480840194506000939192509082900301818387803b1580156110b557600080fd5b505af11580156110c9573d6000803e3d6000fd5b5050505084600160a060020a0316633562fd2085846040516020018083805190602001908083835b602083106111105780518252601f1990920191602091820191016110f1565b6001836020036101000a03801982511681845116808217855250505050505090500182600160a060020a03166c01000000000000000000000000028152601401807f696e6465780000000000000000000000000000000000000000000000000000008152506005019250505060405160208183030381529060405280519060200120836040518363ffffffff1660e060020a0281526004018083815260200182815260200192505050600060405180830381600087803b1580156111d357600080fd5b505af11580156111e7573d6000803e3d6000fd5b5050505084600160a060020a0316633562fd20846040516020018082805190602001908083835b6020831061122d5780518252601f19909201916020918201910161120e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120836001016040518363ffffffff1660e060020a0281526004018083815260200182815260200192505050600060405180830381600087803b1580156112ac57600080fd5b505af11580156112c0573d6000803e3d6000fd5b505050505050505050565b600082600160a060020a0316637a0e03ec8360405160200180807f757365722f737461747573000000000000000000000000000000000000000000815250600b0182600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052805190602001206040518263ffffffff1660e060020a0281526004018082815260200191505060206040518083038186803b158015610c9557600080fd5b60405180604001604052806000815260200160008152509056fea2646970667358221220f66e211e2eab80efadc4944b0894a545e5f14b27b0154fead7854a1a65110a0a64736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "121:645:3:-:0;;;256:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:107:3;552:6:9;:19;;-1:-1:-1;;;;;;552:19:9;561:10;552:19;;;;582:40;;-1:-1:-1;;;;;615:6:9;;;;;552;582:40;;552:6;;582:40;-1:-1:-1;;;;;303:26:3;;295:35;;;;;;336:9;:22;;-1:-1:-1;;;;;;336:22:3;-1:-1:-1;;;;;336:22:3;;;;;;;;;;121:645;;;-1:-1:-1;121:645:3;;",
  "deployedSourceMap": "121:645:3:-:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;121:645:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:127:9;;;:::i;:::-;;370:69:7;;;:::i;367:274:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;367:274:3;-1:-1:-1;367:274:3;;:::i;684:79:9:-;;;:::i;:::-;;;;-1:-1:-1;;;;;684:79:9;;;;;;;;;;;;;;984:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;166:24:3;;;:::i;645:119::-;;;:::i;1628:109:9:-;;;;;;;;;;;;;;;;-1:-1:-1;1628:109:9;-1:-1:-1;;;;;1628:109:9;;:::i;443:105:7:-;;;;;;;;;;;;;;;;-1:-1:-1;443:105:7;-1:-1:-1;;;;;443:105:7;;:::i;1337:127:9:-;880:9;:7;:9::i;:::-;872:18;;;;;;1431:1:::1;1415:6:::0;;1394:40:::1;::::0;-1:-1:-1;;;;;1415:6:9;;::::1;::::0;1394:40:::1;::::0;1431:1;;1394:40:::1;1457:1;1440:19:::0;;-1:-1:-1;;1440:19:9::1;::::0;;1337:127::o;370:69:7:-;880:9:9;:7;:9::i;:::-;872:18;;;;;;426:7:7::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;413:21:7::1;;367:274:3::0;540:9;;520:80;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;540:9:3;;551:10;;520:80;563:9;;;;;;520:80;;563:9;;;;520:80;;;;;;;;;-1:-1:-1;;520:80:3;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;574:8:3;;-1:-1:-1;574:8:3;;;;520:80;;574:8;;;;520:80;;;;;;;;;-1:-1:-1;;520:80:3;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;584:5:3;;-1:-1:-1;584:5:3;;;;520:80;;584:5;;;;520:80;;;;;;;;;-1:-1:-1;591:8:3;;-1:-1:-1;520:19:3;;-1:-1:-1;;520:80:3:i;:::-;611:25;;;631:4;611:25;;;;619:10;;611:25;;;;;;;;;;367:274;;;;;;;:::o;684:79:9:-;722:15;752:6;-1:-1:-1;;;;;752:6:9;684:79;:::o;984:84::-;1024:4;1057:6;-1:-1:-1;;;;;1057:6:9;1043:10;:20;;984:84::o;166:24:3:-;;;-1:-1:-1;;;;;166:24:3;;:::o;645:119::-;737:9;;698:4;;719:40;;-1:-1:-1;;;;;737:9:3;748:10;719:17;:40::i;:::-;712:47;;645:119;:::o;1628:109:9:-;880:9;:7;:9::i;:::-;872:18;;;;;;1704:28:::1;1723:8;1704:18;:28::i;:::-;1628:109:::0;:::o;443:105:7:-;880:9:9;:7;:9::i;:::-;872:18;;;;;;532:10:7::1;-1:-1:-1::0;;;;;519:24:7::1;;815:1407:5::0;1005:20;1028:25;:19;:9;:17;:19::i;:::-;:23;:25::i;:::-;1005:48;;1059:19;1081:24;:18;:8;:16;:18::i;:24::-;1059:46;;1111:16;1130:21;:15;:5;:13;:15::i;:21::-;1111:40;;1157:22;1182:61;1202:9;1182:61;;;;;;;;;;;;;;;;;:19;:61::i;:::-;1157:86;;1249:22;1274:61;1294:9;1274:61;;;;;;;;;;;;;;;;;:19;:61::i;:::-;1249:86;;1341:19;1363:62;1383:9;1363:62;;;;;;;;;;;;;;;;;:19;:62::i;:::-;1341:84;;1431:19;1453:62;1473:9;1453:62;;;;;;;;;;;;;;;;;:19;:62::i;:::-;1431:84;;1549:17;1530:15;:36;;:76;;;;;1589:17;1570:15;:36;;1530:76;1522:85;;;;;;1639:17;1621:14;:35;;:74;;;;;1678:17;1660:14;:35;;1621:74;1613:83;;;;;;1725:14;1710:11;:29;;:62;;;;;1758:14;1743:11;:29;;1710:62;1702:71;;;;;;1780:46;1808:9;1819:6;1780:27;:46::i;:::-;1835:9;-1:-1:-1;;;;;1832:28:5;;1907:6;1871:43;;;;;;;;;;;;;-1:-1:-1;;;;;1871:43:5;;;;;;;;;;;;;;;;;;;;;;1861:54;;;;;;1917:9;1832:95;;;;;-1:-1:-1;;;1832:95:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1936:9;-1:-1:-1;;;;;1933:28:5;;2007:6;1972:42;;;;;;;;;;;;;-1:-1:-1;;;;;1972:42:5;;;;;;;;;;;;;;;;;;;;;;1962:53;;;;;;2017:8;1933:93;;;;;-1:-1:-1;;;1933:93:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2035:9;-1:-1:-1;;;;;2032:28:5;;2102:6;2071:38;;;;;;;;;;;;;-1:-1:-1;;;;;2071:38:5;;;;;;;;;;;;;;;;;;;;;;2061:49;;;;;;2112:5;2032:86;;;;;-1:-1:-1;;;2032:86:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:9;-1:-1:-1;;;;;2124:29:5;;2198:6;2164:41;;;;;;;;;;;;;-1:-1:-1;;;;;2164:41:5;;;;;;;;;;;;;;;;;;;;;;2154:52;;;;;;2208:8;2124:93;;;;;-1:-1:-1;;;2124:93:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;815:1407;;;;;;;;;;;;;:::o;2659:198::-;2733:16;2761:31;2774:9;2785:6;2761:12;:31::i;:::-;2757:96;;;-1:-1:-1;2809:4:5;2802:11;;2757:96;-1:-1:-1;2841:5:5;2757:96;2659:198;;;;:::o;1874:177:9:-;-1:-1:-1;;;;;1951:22:9;;1943:31;;;;;;2006:6;;;1985:38;;-1:-1:-1;;;;;1985:38:9;;;;2006:6;;;1985:38;;;2029:6;:17;;-1:-1:-1;;2029:17:9;-1:-1:-1;;;;;2029:17:9;;;;;;;;;;1874:177::o;2896:210:4:-;2956:12;;:::i;:::-;-1:-1:-1;3069:30:4;;;;;;;;;3075:18;;3069:30;;3038:4;3028:15;;;3069:30;;;;2896:210;;;:::o;5926:692::-;6085:9;;;;6126;;5981:6;;-1:-1:-1;;6085:14:4;;;;6120:15;;;;6145:467;6163:3;6157;:9;6145:467;;;6228:10;;6240:4;6224:21;6268:4;6264:8;;6260:342;;;6299:1;6292:8;;;;6260:342;;;6328:4;6324:1;:8;;;6321:281;;;6359:1;6352:8;;;;6321:281;;;6388:4;6384:1;:8;;;6381:221;;;6419:1;6412:8;;;;6381:221;;;6448:4;6444:1;:8;;;6441:161;;;6479:1;6472:8;;;;6441:161;;;6508:4;6504:1;:8;;;6501:101;;;6539:1;6532:8;;;;6501:101;;;6586:1;6579:8;;;;6501:101;-1:-1:-1;6168:3:4;;;;;6145:467;;;5926:692;;;;;:::o;209:165:6:-;290:4;312:9;-1:-1:-1;;;;;309:26:6;;363:3;346:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;346:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;336:32;;;;;;309:60;;;;;-1:-1:-1;;;309:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:60:6;;209:165;-1:-1:-1;;;209:165:6:o;2226:429:5:-;2337:31;2350:9;2361:6;2337:12;:31::i;:::-;2332:319;;2381:9;-1:-1:-1;;;;;2378:26:5;;2451:6;2415:43;;;;;;;;;;;;;-1:-1:-1;;;;;2415:43:5;;;;;;;;;;;;;;;;;;;;;;2405:54;;;;;;2461:15;2378:99;;;;;-1:-1:-1;;;2378:99:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:9;-1:-1:-1;;;;;2485:27:5;;2555:6;2523:39;;;;;;;;;;;;;-1:-1:-1;;;;;2523:39:5;;;;;;;;;;;;;;;;;;;;;;2513:50;;;;;;2565:1;2485:82;;;;;-1:-1:-1;;;2485:82:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2575:69;2598:9;2575:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2637:6;2575:22;:69::i;:::-;2226:429;;:::o;488:137::-;569:4;619:1;588:28;598:9;609:6;588:9;:28::i;:::-;:32;;;;488:137;-1:-1:-1;;;488:137:5:o;420:438:6:-;533:8;547:9;-1:-1:-1;;;;;544:26:6;;598:8;581:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;581:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:37;;;;;;544:65;;;;;-1:-1:-1;;;544:65:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;544:65:6;655:26;;;;544:65;;-1:-1:-1;;;;;;615:29:6;;;;;672:3;;544:65;;;655:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;655:26:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;655:26:6;;;;;;;;;;;;;;;;-1:-1:-1;655:26:6;;;;;;;;;;;;;;645:37;;;;;;;615:73;;;-1:-1:-1;;;615:73:6;;;;;;;;;;;-1:-1:-1;;;;;615:73:6;;;;;;;;;;;;-1:-1:-1;;;615:73:6;;-1:-1:-1;615:73:6;;;;;;-1:-1:-1;615:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;697:9;-1:-1:-1;;;;;694:26:6;;748:3;753;731:35;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;731:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;731:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;721:46;;;;;;769:3;694:79;;;;;-1:-1:-1;;;694:79:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:9;-1:-1:-1;;;;;779:26:6;;833:8;816:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:37;;;;;;845:3;851:1;845:7;779:74;;;;;-1:-1:-1;;;779:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;420:438;;;;;:::o;629:182:5:-;707:5;730:9;-1:-1:-1;;;;;727:27:5;;797:6;765:39;;;;;;;;;;;;;-1:-1:-1;;;;;765:39:5;;;;;;;;;;;;;;;;;;;;;;755:50;;;;;;727:79;;;;;-1:-1:-1;;;727:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.8.0;\n\nimport './lib/userManager.sol';\nimport './DB.sol';\n\ncontract UserAuthManager is Destructible {\n  address public dbAddress;\n  event SetUser(address indexed _userAddress, bool isSetUp);\n\n  constructor (address _dbAddress) {\n    require(_dbAddress != address(0x0));\n    dbAddress = _dbAddress;\n  }\n\n  function setUser (\n    string calldata firstName,\n    string calldata lastName,\n    string calldata email,\n    bytes32 gravatar\n  )\n    external\n  {\n    userManager.setUser(dbAddress, msg.sender, firstName, lastName, email, gravatar);\n    emit SetUser(msg.sender, true);\n  }\n\n  function login ()\n    external\n    view\n    returns (bool)\n  {\n    return userManager.login(dbAddress, msg.sender);\n  }\n}\n",
  "sourcePath": "/home/dh206382/dev/eth-vue/contracts/UserAuthManager.sol",
  "ast": {
    "absolutePath": "/home/dh206382/dev/eth-vue/contracts/UserAuthManager.sol",
    "exportedSymbols": {
      "DB": [
        893
      ],
      "Destructible": [
        3352
      ],
      "Ownable": [
        3607
      ],
      "SafeMath": [
        3486
      ],
      "UserAuthManager": [
        1101
      ],
      "strings": [
        2826
      ],
      "userManager": [
        3153
      ],
      "utilities": [
        3321
      ]
    },
    "id": 1102,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1026,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:3"
      },
      {
        "absolutePath": "/home/dh206382/dev/eth-vue/contracts/lib/userManager.sol",
        "file": "./lib/userManager.sol",
        "id": 1027,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 3154,
        "src": "69:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dh206382/dev/eth-vue/contracts/DB.sol",
        "file": "./DB.sol",
        "id": 1028,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 894,
        "src": "101:18:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1029,
              "name": "Destructible",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3352,
              "src": "149:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destructible_$3352",
                "typeString": "contract Destructible"
              }
            },
            "id": 1030,
            "nodeType": "InheritanceSpecifier",
            "src": "149:12:3"
          }
        ],
        "contractDependencies": [
          3352,
          3607
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1101,
        "linearizedBaseContracts": [
          1101,
          3352,
          3607
        ],
        "name": "UserAuthManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "91e06b6d",
            "id": 1032,
            "mutability": "mutable",
            "name": "dbAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "166:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1031,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "166:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1038,
            "name": "SetUser",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "208:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "208:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1036,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isSetUp",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "238:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "207:44:3"
            },
            "src": "194:58:3"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "289:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1044,
                          "name": "_dbAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1040,
                          "src": "303:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "325:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "317:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1045,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "317:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "303:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "295:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "295:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "295:35:3"
                },
                {
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1052,
                      "name": "dbAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "336:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1053,
                      "name": "_dbAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1040,
                      "src": "348:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "336:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "336:22:3"
                }
              ]
            },
            "id": 1057,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1040,
                  "mutability": "mutable",
                  "name": "_dbAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "269:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "268:20:3"
            },
            "returnParameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "289:0:3"
            },
            "scope": 1101,
            "src": "256:107:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1086,
              "nodeType": "Block",
              "src": "514:127:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1071,
                        "name": "dbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "540:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1072,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "551:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "551:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1074,
                        "name": "firstName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "563:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1075,
                        "name": "lastName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1061,
                        "src": "574:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1076,
                        "name": "email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "584:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1077,
                        "name": "gravatar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "591:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1068,
                        "name": "userManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3153,
                        "src": "520:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_userManager_$3153_$",
                          "typeString": "type(library userManager)"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3078,
                      "src": "520:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,bytes32)"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "520:80:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "520:80:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1081,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "619:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "619:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "631:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1080,
                      "name": "SetUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "611:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1085,
                  "nodeType": "EmitStatement",
                  "src": "606:30:3"
                }
              ]
            },
            "functionSelector": "851aea7a",
            "id": 1087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "firstName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "390:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "lastName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "421:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "email",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "451:21:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "gravatar",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "478:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:114:3"
            },
            "returnParameters": {
              "id": 1067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:3"
            },
            "scope": 1101,
            "src": "367:274:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "706:58:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1094,
                        "name": "dbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "737:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1095,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "748:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "748:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1092,
                        "name": "userManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3153,
                        "src": "719:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_userManager_$3153_$",
                          "typeString": "type(library userManager)"
                        }
                      },
                      "id": 1093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "login",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3152,
                      "src": "719:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1091,
                  "id": 1098,
                  "nodeType": "Return",
                  "src": "712:47:3"
                }
              ]
            },
            "functionSelector": "b34e97e8",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "login",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:2:3"
            },
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "698:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "697:6:3"
            },
            "scope": 1101,
            "src": "645:119:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1102,
        "src": "121:645:3"
      }
    ],
    "src": "36:731:3"
  },
  "legacyAST": {
    "absolutePath": "/home/dh206382/dev/eth-vue/contracts/UserAuthManager.sol",
    "exportedSymbols": {
      "DB": [
        893
      ],
      "Destructible": [
        3352
      ],
      "Ownable": [
        3607
      ],
      "SafeMath": [
        3486
      ],
      "UserAuthManager": [
        1101
      ],
      "strings": [
        2826
      ],
      "userManager": [
        3153
      ],
      "utilities": [
        3321
      ]
    },
    "id": 1102,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1026,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:3"
      },
      {
        "absolutePath": "/home/dh206382/dev/eth-vue/contracts/lib/userManager.sol",
        "file": "./lib/userManager.sol",
        "id": 1027,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 3154,
        "src": "69:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dh206382/dev/eth-vue/contracts/DB.sol",
        "file": "./DB.sol",
        "id": 1028,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 894,
        "src": "101:18:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1029,
              "name": "Destructible",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3352,
              "src": "149:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destructible_$3352",
                "typeString": "contract Destructible"
              }
            },
            "id": 1030,
            "nodeType": "InheritanceSpecifier",
            "src": "149:12:3"
          }
        ],
        "contractDependencies": [
          3352,
          3607
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1101,
        "linearizedBaseContracts": [
          1101,
          3352,
          3607
        ],
        "name": "UserAuthManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "91e06b6d",
            "id": 1032,
            "mutability": "mutable",
            "name": "dbAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "166:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1031,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "166:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1038,
            "name": "SetUser",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "208:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "208:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1036,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isSetUp",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "238:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "207:44:3"
            },
            "src": "194:58:3"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "289:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1044,
                          "name": "_dbAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1040,
                          "src": "303:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "325:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "317:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1045,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "317:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "303:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "295:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "295:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "295:35:3"
                },
                {
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1052,
                      "name": "dbAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "336:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1053,
                      "name": "_dbAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1040,
                      "src": "348:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "336:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "336:22:3"
                }
              ]
            },
            "id": 1057,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1040,
                  "mutability": "mutable",
                  "name": "_dbAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "269:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "268:20:3"
            },
            "returnParameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "289:0:3"
            },
            "scope": 1101,
            "src": "256:107:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1086,
              "nodeType": "Block",
              "src": "514:127:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1071,
                        "name": "dbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "540:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1072,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "551:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "551:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1074,
                        "name": "firstName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "563:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1075,
                        "name": "lastName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1061,
                        "src": "574:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1076,
                        "name": "email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "584:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1077,
                        "name": "gravatar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "591:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1068,
                        "name": "userManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3153,
                        "src": "520:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_userManager_$3153_$",
                          "typeString": "type(library userManager)"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3078,
                      "src": "520:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,bytes32)"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "520:80:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "520:80:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1081,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "619:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "619:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "631:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1080,
                      "name": "SetUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "611:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1085,
                  "nodeType": "EmitStatement",
                  "src": "606:30:3"
                }
              ]
            },
            "functionSelector": "851aea7a",
            "id": 1087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "firstName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "390:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "lastName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "421:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "email",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "451:21:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "gravatar",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "478:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:114:3"
            },
            "returnParameters": {
              "id": 1067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:3"
            },
            "scope": 1101,
            "src": "367:274:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "706:58:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1094,
                        "name": "dbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "737:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1095,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "748:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "748:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1092,
                        "name": "userManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3153,
                        "src": "719:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_userManager_$3153_$",
                          "typeString": "type(library userManager)"
                        }
                      },
                      "id": 1093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "login",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3152,
                      "src": "719:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1091,
                  "id": 1098,
                  "nodeType": "Return",
                  "src": "712:47:3"
                }
              ]
            },
            "functionSelector": "b34e97e8",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "login",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:2:3"
            },
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "698:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "697:6:3"
            },
            "scope": 1101,
            "src": "645:119:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1102,
        "src": "121:645:3"
      }
    ],
    "src": "36:731:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "666": {
      "events": {
        "0x6648b859e158f53470fd0dc1bf91fcede20e1eb2d71db770236d145353b08a60": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_userAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "isSetUp",
              "type": "bool",
              "internalType": "bool"
            }
          ],
          "name": "SetUser",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9a5141C006986bf7507E908abF42BF4dBF70909a",
      "transactionHash": "0x4fe12a8979ce99ca93823672ef8597e178ee489a7b1d05030775b8241f2cf530"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-09T23:50:40.806Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "destroy()": {
        "details": "Transfers the current balance to the owner and terminates the contract."
      },
      "isOwner()": {
        "returns": {
          "_0": "true if `msg.sender` is the owner of the contract."
        }
      },
      "owner()": {
        "returns": {
          "_0": "the address of the owner."
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
}